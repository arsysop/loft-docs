. foo : FunctionDecl type=int (const int *, unsigned long).FunctionProto [c:@F@foo] <fancy_ptr.cpp:38:16>
. foo_adapter_default : FunctionDecl type=int (const std::vector<int> &).FunctionProto [c:@F@foo_adapter_default#&1$@N@std@N@__1@S@vector>#I#$@N@std@N@__1@S@allocator>#I#] <fancy_ptr.cpp:41:5>
.... foo : FunctionDecl type=int (const int *, unsigned long) [c:@F@foo] <fancy_ptr.cpp:38:16>
..... operator[] : CXXMethod type=std::vector<int>::const_reference (std::vector<int>::size_type) const noexcept [c:@N@std@N@__1@S@vector>#I#$@N@std@N@__1@S@allocator>#I@F@operator[]#l#1] </Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.0.sdk/usr/include/c++/v1/vector:670:47>
..... size : CXXMethod type=std::vector<int>::size_type () const noexcept [c:@N@std@N@__1@S@vector>#I#$@N@std@N@__1@S@allocator>#I@F@size#1] </Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.0.sdk/usr/include/c++/v1/vector:657:15>
. foo_adapter_custom : FunctionDecl type=int (const FancyVec &).FunctionProto [c:@F@foo_adapter_custom#&1$@N@std@N@__1@S@vector>#I#$@N@my@S@custom_allocator>#I#] <fancy_ptr.cpp:48:5>
.... foo : FunctionDecl type=int (const int *, unsigned long) [c:@F@foo] <fancy_ptr.cpp:38:16>
..... operator[] : CXXMethod type=std::vector<int, my::custom_allocator<int>>::const_reference (std::vector<int, my::custom_allocator<int>>::size_type) const noexcept [c:@N@std@N@__1@S@vector>#I#$@N@my@S@custom_allocator>#I@F@operator[]#l#1] </Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.0.sdk/usr/include/c++/v1/vector:670:47>
........ operator[] : CXXMethod type=const int &(size_t) const [c:@N@my@S@Ptr>#I@F@operator[]#l#1] <./fancy_ptr.h:59:14>
..... size : CXXMethod type=std::vector<int, my::custom_allocator<int>>::size_type () const noexcept [c:@N@std@N@__1@S@vector>#I#$@N@my@S@custom_allocator>#I@F@size#1] </Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.0.sdk/usr/include/c++/v1/vector:657:15>
........ operator- : FunctionDecl type=ptrdiff_t (const Ptr<int> &, const Ptr<int>) [c:@N@my@F@operator-<#I>#&1$@N@my@S@Ptr>#I#1S1_#] <./fancy_ptr.h:108:11>
. foo_at_rvalue : FunctionDecl type=int (const FancyVec &, size_t).FunctionProto [c:@F@foo_at_rvalue#&1$@N@std@N@__1@S@vector>#I#$@N@my@S@custom_allocator>#I#l#] <fancy_ptr.cpp:52:5>
.... at : CXXMethod type=std::vector<int, my::custom_allocator<int>>::const_reference (std::vector<int, my::custom_allocator<int>>::size_type) const [c:@N@std@N@__1@S@vector>#I#$@N@my@S@custom_allocator>#I@F@at#l#1] </Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.0.sdk/usr/include/c++/v1/vector:672:21>
....... size : CXXMethod type=std::vector<int, my::custom_allocator<int>>::size_type () const noexcept [c:@N@std@N@__1@S@vector>#I#$@N@my@S@custom_allocator>#I@F@size#1] </Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.0.sdk/usr/include/c++/v1/vector:657:15>
.......... operator- : FunctionDecl type=ptrdiff_t (const Ptr<int> &, const Ptr<int>) [c:@N@my@F@operator-<#I>#&1$@N@my@S@Ptr>#I#1S1_#] <./fancy_ptr.h:108:11>
....... __throw_out_of_range : CXXMethod type=void () const [c:@N@std@N@__1@S@__vector_base_common>#Vb1@F@__throw_out_of_range#1] </Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.0.sdk/usr/include/c++/v1/vector:307:27>
....... operator[] : CXXMethod type=const int &(size_t) const [c:@N@my@S@Ptr>#I@F@operator[]#l#1] <./fancy_ptr.h:59:14>
. foo_at_lvalue : FunctionDecl type=void (FancyVec &, size_t).FunctionProto [c:@F@foo_at_lvalue#&$@N@std@N@__1@S@vector>#I#$@N@my@S@custom_allocator>#I#l#] <fancy_ptr.cpp:56:6>
.... at : CXXMethod type=std::vector<int, my::custom_allocator<int>>::reference (std::vector<int, my::custom_allocator<int>>::size_type) [c:@N@std@N@__1@S@vector>#I#$@N@my@S@custom_allocator>#I@F@at#l#] </Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.0.sdk/usr/include/c++/v1/vector:671:21>
....... size : CXXMethod type=std::vector<int, my::custom_allocator<int>>::size_type () const noexcept [c:@N@std@N@__1@S@vector>#I#$@N@my@S@custom_allocator>#I@F@size#1] </Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.0.sdk/usr/include/c++/v1/vector:657:15>
.......... operator- : FunctionDecl type=ptrdiff_t (const Ptr<int> &, const Ptr<int>) [c:@N@my@F@operator-<#I>#&1$@N@my@S@Ptr>#I#1S1_#] <./fancy_ptr.h:108:11>
....... __throw_out_of_range : CXXMethod type=void () const [c:@N@std@N@__1@S@__vector_base_common>#Vb1@F@__throw_out_of_range#1] </Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.0.sdk/usr/include/c++/v1/vector:307:27>
....... operator[] : CXXMethod type=int &(size_t) [c:@N@my@S@Ptr>#I@F@operator[]#l#] <./fancy_ptr.h:57:8>
